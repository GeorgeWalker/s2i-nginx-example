server {
    listen       8080;
    server_name  _;
    
    # Allows non-standard headers like SMGOV_USERGUID
    ignore_invalid_headers off;

	
    
    # 172.16.0.0/12 is the entire addressable space in the cluster
    #set_real_ip_from  172.51.0.0/22;
    #set_real_ip_from  172.51.4.0/22;
    #real_ip_header    X-Forwarded-For;

    location /test {					
	
        # proxy all traffic to this URL, 
        # note the trailing slash strips out the /proxy path on 
        # the request to the upstream server
        proxy_pass ${NGINX_PROXY_URL};
        
        # Ensure HTTP get passed thru
        proxy_pass_request_headers on;
        
        # its helpful to cache these responses
        proxy_cache globalcache;
    }
    
    # For status of ngnix service
    location /nginx_status {
        # Enable Nginx stats
        stub_status on;
        # Only allow access from localhost
        allow all
		#127.0.0.1;
        # Other request should be denied
        #deny all;
        # No need to log this request, its just noise
        access_log off;
    }


    location / {	
	js_set $summary "function summary(req, res) {
    var a, s, h;

    s = 'Request summary\n\n';

    s += 'Method: ' + req.method + '\n';
    s += 'HTTP version: ' + req.httpVersion + '\n';
    s += 'Host: ' + req.headers.host + '\n';
    s += 'Remote Address: ' + req.remoteAddress + '\n';
    s += 'URI: ' + req.uri + '\n';

    s += 'Headers:\n';
    for (h in req.headers) {
        s += '  header \"' + h + '\" is \"' + req.headers[h] + '\"\n';
    }

    s += 'Args:\n';
    for (a in req.args) {
        s += '  arg \"' + a + '\" is \"' + req.args[a] + '\"\n';
    }

    return s;
}";
	}


}
